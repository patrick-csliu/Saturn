on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Release

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11.5"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install build
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: build package
      run : python -m build
    - name: Upload /dist
      uses: actions/upload-artifact@v3
      with:
        name: python-package-distributions
        path: dist
    - name: get the file name in /dist
      run: |
        VAR1=$(find ./dist -type f -name "*.tar.gz")
        VAR2=$(basename $VAR1)
        echo $VAR2
        echo "TAR_FILE=$VAR2" >> "$GITHUB_OUTPUT"
        echo "TAR_PATH=$VAR1" >> "$GITHUB_OUTPUT"
      id: filename
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body_path: ./docs/packing_a_package.md
        draft: false
        prerelease: false
    # - name: check things is going right
    #   run: |
    #     echo ${{ steps.filename.outputs.TAR_FILE }}
    #     ls -R
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ${{ steps.filename.outputs.TAR_PATH }}
        asset_name: ${{ steps.filename.outputs.TAR_FILE }}
        asset_content_type: application/gzip
  publish-to-testpypi:
    name: Publish Python distribution ðŸ“¦ to TestPyPI
    needs:
    - build
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/pypackage_test

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution ðŸ“¦ to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
