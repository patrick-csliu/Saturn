on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Release

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11.5"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install build
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: build package
      run : python -m build
    # - name: Upload /dist
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: dist-dir
    #     path: dist
    # - name: test cmd
    #   run: ls -R
    - name: get the file name in /dist
      run: |
        VAR1=$(find ./dist -type f -name "*.tar.gz")
        VAR2=$(basename $VAR1)
        echo $VAR2
        echo "TAR_FILE=$VAR2" >> "$GITHUB_OUTPUT"
      id: filename
    # =$(basename $(find ./dist -type f -name "*.tar.gz"))
    # Release
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: false
        prerelease: false
    - name: test
      run: echo ${{ steps.filename.outputs.TAR_FILE }}
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./dist/*tar.gz
        asset_name: ${{ steps.filename.outputs.TAR_FILE }}
        asset_content_type: application/gzip

  # Release:

  #   name: Upload Release Asset
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Build project # This would actually build your project, using zip for an example artifact
  #       run: |
  #         zip --junk-paths my-artifact README.md
  #     - name: Create Release
  #       id: create_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{ github.ref }}
  #         release_name: Release ${{ github.ref }}
  #         body: |
  #           Changes in this Release
  #           - First Change
  #           - Second Change
  #         draft: false
  #         prerelease: false
  #     - name: Show Info
  #       run: echo ${{ github.ref }}
  #     - name: Download dist
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: dist-dir
  #     - name: Upload Release Asset
  #       id: upload-release-asset 
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
  #         asset_path: ./dist/*.tar.gz
  #         asset_name: my-artifact.zip
  #         asset_content_type: application/zip